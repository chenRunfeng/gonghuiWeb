<?php/***Author: Ashuwp*Author url: http://www.ashuwp.com*Version: 3.2**/class ashu_option_class {  var $ashu_option;  var $pageinfo;  var $database_options;  var $saved_optionname;  var $tab_active = 'active';    function __construct($ashu_option, $pageinfo) {    $this->options = $ashu_option;    $this->pageinfo = $pageinfo;    $this->make_data_available();	    add_action( 'admin_menu', array(&$this, 'add_admin_menu') );	    if( isset($_GET['page']) && ($_GET['page'] == $this->pageinfo['filename']) ) {      add_action('admin_init', array(&$this, 'enqueue_head'));    }  }    function enqueue_head() {    wp_enqueue_media();    wp_enqueue_style('metabox_fields_css', get_template_directory_uri(). '/css/metabox_fields.css');    wp_enqueue_script('metabox_fields_js',get_template_directory_uri(). '/js/metabox_fields.js');  }    function add_admin_menu() {    $top_level = "Custom Options";    if($this->pageinfo['child']) {      $parent_slug = $this->pageinfo['parent_slug'];      add_submenu_page($parent_slug, $this->pageinfo['full_name'], $this->pageinfo['full_name'], 'edit_themes', $this->pageinfo['filename'], array(&$this, 'initialize'));    }else{      add_menu_page($this->pageinfo['full_name'], $this->pageinfo['full_name'], 'edit_themes', $this->pageinfo['filename'], array(&$this, 'initialize'));    }  }    function make_data_available() {    global $ashu_option;	    foreach ($this->options as $option) {      if( isset($option['std']) ) {        $ashu_option_std[$this->pageinfo['optionname']][$option['id']] = $option['std'];      }    }        $this->saved_optionname = 'ashu_'.$this->pageinfo['optionname'];    $ashu_option[$this->pageinfo['optionname']] = get_option($this->saved_optionname);        $ashu_option[$this->pageinfo['optionname']] = array_merge((array)$ashu_option_std[$this->pageinfo['optionname']], (array)$ashu_option[$this->pageinfo['optionname']]);        $ashu_option[$this->pageinfo['optionname']] = $this->htmlspecialchars_deep($ashu_option[$this->pageinfo['optionname']]);  }    function htmlspecialchars_deep($mixed, $quote_style = ENT_QUOTES, $charset = 'UTF-8') {    if (is_array($mixed) || is_object($mixed)) {	  foreach($mixed as $key => $value) {	    $mixed[$key] = $this->htmlspecialchars_deep($value, $quote_style, $charset);	  }    }elseif (is_string($mixed)) {      $mixed = htmlspecialchars_decode($mixed, $quote_style);    }        return $mixed;  }    function initialize() {    $this->get_save_options();    $this->display();  }    function display() {    $saveoption = false;    echo '<div class="wrap">';    echo '<div class="icon32" id="icon-options-general"><br/></div>';    echo '<h2>'.$this->pageinfo['full_name'].'</h2>';    echo '<form method="post" action="">';        if( isset($this->pageinfo['tab']) && $this->pageinfo['tab'] ){      echo '<div class="tab-content">';      $this->tab_toggle($this->options);          foreach ($this->options as $option) {        if (method_exists($this, $option['type'])) {          $this->$option['type']($option);          $saveoption = true;        }      }    }else{      foreach ($this->options as $option) {        if (method_exists($this, $option['type'])) {          $this->$option['type']($option);          $saveoption = true;        }      }    }        if($saveoption) {      echo '<p class="submit">';      echo '<input type="hidden" value="1" name="save_my_options"/>';      wp_nonce_field( 'ashumetabox','ashu_meta_noce' );      echo '<input type="submit" name="Submit" class="button-primary autowidth" value="Save Changes" /></p>';    }    echo '</form></div>';  }    function get_save_options() {    $ashu_option = $newoptions  = get_option($this->saved_optionname);	    if ( isset( $_POST['save_my_options'] ) ) {      if( isset($_REQUEST['ashu_meta_noce']) && wp_verify_nonce($_REQUEST['ashu_meta_noce'], 'ashumetabox') ) {        echo '<div class="updated fade" id="message" style=""><p><strong>Settings saved.</strong></p></div>';        foreach($this->options as $ashu_option) {          if( $ashu_option['type'] == 'tinymce' ){            $value = stripslashes( $_POST[$ashu_option['id']] );            $newoptions[$ashu_option['id']] = $value;          }elseif($ashu_option['type'] == 'checkbox'){            $value = $_POST[$ashu_option['id']];            $newoptions[$ashu_option['id']] = $value;          }elseif($ashu_option['type'] == 'numbers_array'){            $value = explode( ',', $_POST[$ashu_option['id']] );            $value = array_filter($value);            $newoptions[$ashu_option['id']] = $value;          }elseif($ashu_option['type'] == 'gallery'){            $value = explode( ',', $_POST[$ashu_option['id']] );            $value = array_filter($value);            $newoptions[$ashu_option['id']] = $value;          }elseif( in_array( $ashu_option['type'], array('open','close','title') ) ){            continue;          }else{            $value = stripslashes( $_POST[$ashu_option['id']] );            $newoptions[$ashu_option['id']] = $value;          }        }      }    }    if ( $ashu_option != $newoptions ) {      $ashu_option = $newoptions;      update_option($this->saved_optionname, $ashu_option);    }    $this->database_options = $ashu_option;  }    function tab_toggle($options){    if(!$options)      return;        $active = 'class="active"';    echo '<ul class="nav-tabs">';    foreach($options as $values){      if($values['type']=='open'){        echo '<li '.$active.'><a href="#tab_'.$values['id'].'" data-toggle="tab">'.$values['name'].'</a></li>';        $active = '';      }    }    echo '</ul>';  }    function open($values) {    if( isset($this->pageinfo['tab']) && $this->pageinfo['tab'] ){      echo '<div id="tab_'.$values['id'].'" class="tab-pane '.$this->tab_active.'">';      echo '<table class="widefat">';      echo '<thead><tr><th colspan="2">&nbsp;</th></tr></thead>';      $this->tab_active = '';    }else{      if(!isset($values['name']))        $values['name'] = "";      echo '<table class="widefat">';      echo '<thead><tr><th colspan="2">'.$values['name'].'&nbsp;</th></tr></thead>';    }  }    function close($values) {    if(!isset($values['name']))      $values['name'] = "";    echo '<tfoot><tr><th>&nbsp;</th><th>'.$values['name'].'&nbsp;</th></tr></tfoot></table>';        if( isset($this->pageinfo['tab']) && $this->pageinfo['tab'] )      echo '</div>';  }    function title($values) {    echo '<tr valign="top" >';    echo '<th scope="row" width="200px"><h3>'.$values['name'].'</h3></th><td>';    if (isset($values['desc']))      echo '<p>'.$values['desc'].'</p>';  }    function text($values) {    if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];    echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';    echo '<input type="text" size="'.$values['size'].'" value="'.$values['std'].'" id="'.$values['id'].'" name="'.$values['id'].'"/>';    echo '<br/><br/></td>';    echo '</tr>';  }    function password($values){    if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];    echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';    echo '<input type="password" size="'.$values['size'].'" value="'.$values['std'].'" id="'.$values['id'].'" name="'.$values['id'].'"/>';    echo '<br/><br/></td>';    echo '</tr>';  }    function numbers_array($values){    if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];    if($values['std']!='')        $nums = implode( ',', $values['std'] );    else      $nums = '';        echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';    echo '<input type="text" size="'.$values['size'].'" value="'.$nums.'" id="'.$values['id'].'" name="'.$values['id'].'"/>';    echo '<br/><br/></td>';    echo '</tr>';  }    function textarea($values) {    if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];	      if(!isset($values['size'])){      $values['size'] = array(60,5);    }        echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';    echo '<textarea name="'.$values['id'].'" cols="'.$values['size'][0].'" rows="'.$values['size'][1].'" id="'.$values['id'].'" style="width: 80%; font-size: 12px;" class="code">';    echo $values['std'].'</textarea><br/>';    echo '<br/></td>';    echo '</tr>';  }    function upload($values) {    $prevImg = '';    if(isset($this->database_options[$values['id']]))       $values['std'] = $this->database_options[$values['id']];        $button_text = (isset($values['button_text'])) ? $values['button_text'] : 'Upload';    $file_view = '';        if($values['std'] != ''){      $file_type = substr($values['std'], strrpos($values['std'] , '.') + 1);      if(in_array($file_type,array('png','jpg','gif','bmp'))){        $file_view = '<img src="'.$values['std'].'" />';      }else{        $file_view = '<img src="'.includes_url().'/images/media/default.png" />';      }    }        echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>';    echo '<div class="ashu_file_view_option" id="'.$values['id'].'_div">'.$file_view.'</div>';    echo $values['desc'].'<br/>';    echo '<input type="text" size="60" value="'.$values['std'].'" name="'.$values['id'].'" class="ashuwp_url_input" id="'.$values['id'].'_input"/><a id="'.$values['id'].'" class="ashu_upload_button button" href="#">'.$button_text.'</a>';        echo '<br/><br/></td>';    echo '</tr>';  }    function gallery($values){        if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];        $button_text = (isset($values['button_text'])) ? $values['button_text'] : 'Upload';        if($values['std'] != ''){      $image_ids = implode( ',', $values['std'] );    }else{      $image_ids = '';    }    echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';    echo '<div class="gallery_container"><ul class="gallery_view">';    if ( $values['std'] )      foreach ( $values['std'] as $attachment_id ) {        echo '<li class="image" data-attachment_id="' . $attachment_id . '">' . wp_get_attachment_image( $attachment_id, 'thumbnail' ) . '<ul class="actions"><li><a href="#" class="delete" title="Delete image">Delete</a></li></ul></li>';      }    echo '</ul><div class="clear"></div>';    echo '<input type="hidden" id="'.$values['id'].'_input" class="gallery_input" name="'.$values['id'].'" value="'.$image_ids.'" />';    echo '<a href="#" class="add_gallery button">'.$button_text.'</a>';    echo '</div>';    echo '<br/><br/></td>';    echo '</tr>';  }    function radio($values) {    if(isset($this->database_options[$values['id']]))	  $values['std'] = $this->database_options[$values['id']];	      echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';        foreach($values['buttons'] as $key=>$value) {      $checked ="";      if(isset($values['std']) && ($values['std'] == $key)) {        $checked = 'checked = "checked"';      }      echo '<p><input '.$checked.' type="radio" class="kcheck" value="'.$key.'" name="'.$values['id'].'"/>';      echo '<label for="'.$values['id'].'">'.$value.'</label></p>';    }        echo '<br/></td>';        echo '</tr>';  }    function checkbox($values) {    if(isset($this->database_options[$values['id']]))	  $values['std'] = $this->database_options[$values['id']];	      echo '<tr valign="top">';    echo '<th scope="row" width="200px">'.$values['name'].'</th><td>';        foreach( $values['buttons'] as $key=>$value ) {      $checked ="";            if( is_array($values['std']) && in_array($key,$values['std'])) {        $checked = 'checked = "checked"';      }            echo '<input '.$checked.' type="checkbox" class="ashu_checkbox" value="'.$key.'" name="'.$values['id'].'[]"/>'.$value;    }        echo '<label for="'.$values['id'].'">'.$values['desc'].'</label><br/>';    echo '<br/></td>';    echo '</tr>';  }    function dropdown($values) {    if(isset($this->database_options[$values['id']]))      $values['std'] = $this->database_options[$values['id']];	      echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';        if($values['subtype'] == 'page') {      $select = 'Select page';      $entries = get_pages('title_li=&orderby=name');    }elseif($values['subtype'] == 'sidebar'){      global $wp_registered_sidebars;      $select = 'Select a special sidebar';      $entries = $wp_registered_sidebars;    }elseif($values['subtype'] == 'menu'){      $select = 'Select...';      $entries = get_terms( 'nav_menu', array( 'hide_empty' => false ) );    }elseif($values['subtype'] == 'category'){      $select = 'Select category';      $entries = get_terms('category',array('hide_empty' => false));    }else{      $select = 'Select...';      $entries = $values['subtype'];    }        echo '<select class="postform" id="'. $values['id'] .'" name="'. $values['id'] .'"> ';    echo '<option value="">'.$select .'</option>  ';        foreach ($entries as $key => $entry) {      if($values['subtype'] == 'page') {        $id = $entry->ID;        $title = $entry->post_title;      }elseif($values['subtype'] == 'category'){        $id = $entry->term_id;        $title = $entry->name;      }elseif($values['subtype'] == 'menu'){        $id = $entry->term_id;        $title = $entry->name;      }elseif($values['subtype'] == 'sidebar'){        $id = $entry['id'];        $title = $entry['name'];      }else{        $id = $key;        $title = $entry;      }            if ($values['std'] == $id ) {        $selected = "selected='selected'";      }else{        $selected = "";      }      echo"<option $selected value='". $id."'>". $title."</option>";    }        echo '</select>';    echo '<br/><br/></td>';    echo '</tr>';  }    function tinymce($values){    if(isset($this->database_options[$values['id']]))	  $values['std'] = $this->database_options[$values['id']];	      echo '<tr valign="top" >';    echo '<th scope="row" width="200px">'.$values['name'].'</th>';    echo '<td>'.$values['desc'].'<br/>';        $tinymce_args = array(      'content_css' => get_stylesheet_directory_uri() . '/css/editor-'.$values['id'].'.css'    );        if( isset($values['media']) && !$values['media'] )      $values['media'] = 0;    else      $values['media'] = 1;          wp_editor( $values['std'], $values['id'],$settings=array('tinymce'=>1,'media_buttons'=>$values['media'],'tinymce'=>$tinymce_args) );    echo '<br/></td>';    echo '</tr>';  }}?>